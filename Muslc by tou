-------------------------------------
        -- üéÆ ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å "‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô"
        -------------------------------------
        local playerFrame = Instance.new("Frame")
        playerFrame.Name = "‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô"
        playerFrame.Size = UDim2.new(1, 0, 1, 0)
        playerFrame.Visible = false
        playerFrame.BackgroundTransparency = 1
        playerFrame.ZIndex = 10
        playerFrame.Parent = contentFrame

        local title = Instance.new("TextLabel")
        title.Text = "‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô"
        title.Font = Enum.Font.GothamBold
        title.TextSize = 18
        title.TextColor3 = Color3.new(1, 1, 1)
        title.BackgroundTransparency = 1
        title.Position = UDim2.new(0, 10, 0, 5)
        title.Size = UDim2.new(0, 200, 0, 30)
        title.TextScaled = true
        title.TextWrapped = true
        title.ZIndex = 10
        title.Parent = playerFrame

        local speedLabel = Instance.new("TextLabel")
        speedLabel.Text = "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß:"
        speedLabel.Size = UDim2.new(0, 80, 0, 25)
        speedLabel.Position = UDim2.new(0, 10, 0, 40)
        speedLabel.TextColor3 = Color3.new(1, 1, 1)
        speedLabel.BackgroundTransparency = 1
        speedLabel.TextScaled = true
        speedLabel.TextWrapped = true
        speedLabel.ZIndex = 10
        speedLabel.Parent = playerFrame

        local speedBox = Instance.new("TextBox")
        speedBox.Size = UDim2.new(0, 80, 0, 25)
        speedBox.Position = UDim2.new(0, 100, 0, 40)
        speedBox.Text = savedStates.SpeedValue
        speedBox.TextColor3 = Color3.new(1, 1, 1)
        speedBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        speedBox.TextScaled = true
        speedBox.TextWrapped = true
        speedBox.ZIndex = 10
        speedBox.Parent = playerFrame

        local speedToggle = Instance.new("TextButton")
        speedToggle.Size = UDim2.new(0, 80, 0, 25)
        speedToggle.Position = UDim2.new(0, 190, 0, 40)
        speedToggle.Text = savedStates.Speed and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
        speedToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        speedToggle.TextColor3 = Color3.new(1, 1, 1)
        speedToggle.TextScaled = true
        speedToggle.TextWrapped = true
        speedToggle.ZIndex = 10
        speedToggle.Parent = playerFrame

        local jumpLabel = speedLabel:Clone()
        jumpLabel.Text = "‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î:"
        jumpLabel.Position = UDim2.new(0, 10, 0, 80)
        jumpLabel.Parent = playerFrame

        local jumpBox = speedBox:Clone()
        jumpBox.Text = savedStates.JumpValue
        jumpBox.Position = UDim2.new(0, 100, 0, 80)
        jumpBox.Parent = playerFrame

        local jumpToggle = speedToggle:Clone()
        jumpToggle.Text = savedStates.Jump and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
        jumpToggle.Position = UDim2.new(0, 190, 0, 80)
        jumpToggle.Parent = playerFrame

        local speedEnabled = savedStates.Speed
        local jumpEnabled = savedStates.Jump
        local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")

        speedBox:GetPropertyChangedSignal("Text"):Connect(function()
            savedStates.SpeedValue = speedBox.Text
            print("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å SpeedValue:", savedStates.SpeedValue)
        end)
        jumpBox:GetPropertyChangedSignal("Text"):Connect(function()
            savedStates.JumpValue = jumpBox.Text
            print("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å JumpValue:", savedStates.JumpValue)
        end)

        speedToggle.MouseButton1Click:Connect(function()
            speedEnabled = not speedEnabled
            savedStates.Speed = speedEnabled
            speedToggle.Text = speedEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
            print("‡∏™‡∏•‡∏±‡∏ö Speed:", speedEnabled)
        end)

        jumpToggle.MouseButton1Click:Connect(function()
            jumpEnabled = not jumpEnabled
            savedStates.Jump = jumpEnabled
            jumpToggle.Text = jumpEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
            print("‡∏™‡∏•‡∏±‡∏ö Jump:", jumpEnabled)
        end)

        RunService.Heartbeat:Connect(function()
            if humanoid then
                local success, err = pcall(function()
                    if speedEnabled then
                        local speed = tonumber(savedStates.SpeedValue) or 16
                        humanoid.WalkSpeed = speed
                    else
                        humanoid.WalkSpeed = 16
                    end
                    if jumpEnabled then
                        local jump = tonumber(savedStates.JumpValue) or 50
                        if jump <= 150 then
                            humanoid.JumpPower = jump
                        else
                            humanoid.JumpPower = 50
                        end
                    else
                        humanoid.JumpPower = 50
                    end
                end)
                if not success then
                    warn("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô Heartbeat: " .. err)
                end
            end
        end)

        -------------------------------------
        -- ‚öôÔ∏è ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å "‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"
        -------------------------------------
        local settingFrame = Instance.new("Frame")
        settingFrame.Name = "‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"
        settingFrame.Size = UDim2.new(1, 0, 1, 0)
        settingFrame.Visible = false
        settingFrame.BackgroundTransparency = 1
        settingFrame.ZIndex = 10
        settingFrame.Parent = contentFrame

        local saveLabel = Instance.new("TextLabel")
        saveLabel.Text = "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°:"
        saveLabel.Size = UDim2.new(0, 150, 0, 25)
        saveLabel.Position = UDim2.new(0, 10, 0, 40)
        saveLabel.TextColor3 = Color3.new(1, 1, 1)
        saveLabel.BackgroundTransparency = 1
        saveLabel.TextScaled = true
        saveLabel.TextWrapped = true
        saveLabel.ZIndex = 10
        saveLabel.Parent = settingFrame

        local saveToggle = Instance.new("TextButton")
        saveToggle.Size = UDim2.new(0, 80, 0, 25)
        saveToggle.Position = UDim2.new(0, 170, 0, 40)
        saveToggle.Text = "‡∏õ‡∏¥‡∏î"
        saveToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        saveToggle.TextColor3 = Color3.new(1, 1, 1)
        saveToggle.TextScaled = true
        saveToggle.TextWrapped = true
        saveToggle.ZIndex = 10
        saveToggle.Parent = settingFrame

        local fpsPingLabel = Instance.new("TextLabel")
        fpsPingLabel.Text = "‡∏Ç‡∏∂‡πâ‡∏ô FPS+PING:"
        fpsPingLabel.Size = UDim2.new(0, 150, 0, 25)
        fpsPingLabel.Position = UDim2.new(0, 10, 0, 80)
        fpsPingLabel.TextColor3 = Color3.new(1, 1, 1)
        fpsPingLabel.BackgroundTransparency = 1
        fpsPingLabel.TextScaled = true
        fpsPingLabel.TextWrapped = true
        fpsPingLabel.ZIndex = 10
        fpsPingLabel.Parent = settingFrame

        local serverInfoLabel = Instance.new("TextLabel")
        serverInfoLabel.Text = "‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü:"
        serverInfoLabel.Size = UDim2.new(0, 150, 0, 25)
        serverInfoLabel.Position = UDim2.new(0, 10, 0, 120)
        serverInfoLabel.TextColor3 = Color3.new(1, 1, 1)
        serverInfoLabel.BackgroundTransparency = 1
        serverInfoLabel.TextScaled = true
        serverInfoLabel.TextWrapped = true
        serverInfoLabel.ZIndex = 10
        serverInfoLabel.Parent = settingFrame

        local function createFpsPingGui()
            print("‡∏™‡∏£‡πâ‡∏≤‡∏á FpsPingGui")
            local fpsPingGui = Instance.new("ScreenGui")
            fpsPingGui.Name = "FpsPingGui"
            fpsPingGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
            fpsPingGui.IgnoreGuiInset = true
            fpsPingGui.Parent = PlayerGui

            local fpsPingFrame = Instance.new("Frame")
            fpsPingFrame.Size = UDim2.new(0, 150, 0, 100)
            fpsPingFrame.Position = UDim2.new(0.5, -75, 0.5, -50)
            fpsPingFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            fpsPingFrame.BorderSizePixel = 0
            fpsPingFrame.Active = true
            fpsPingFrame.Draggable = true
            fpsPingFrame.ZIndex = 10
            fpsPingFrame.Parent = fpsPingGui

            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0, 8)
            corner.Parent = fpsPingFrame

            local fpsLabel = Instance.new("TextLabel")
            fpsLabel.Text = "FPS: 0.00"
            fpsLabel.Size = UDim2.new(1, -10, 0, 40)
            fpsLabel.Position = UDim2.new(0, 5, 0, 10)
            fpsLabel.TextColor3 = Color3.new(1, 1, 1)
            fpsLabel.BackgroundTransparency = 1
            fpsLabel.TextScaled = true
            fpsLabel.TextWrapped = true
            fpsLabel.ZIndex = 10
            fpsLabel.Parent = fpsPingFrame

            local pingLabel = Instance.new("TextLabel")
            pingLabel.Text = "PING: N/A"
            pingLabel.Size = UDim2.new(1, -10, 0, 40)
            pingLabel.Position = UDim2.new(0, 5, 0, 50)
            pingLabel.TextColor3 = Color3.new(1, 1, 1)
            pingLabel.BackgroundTransparency = 1
            pingLabel.TextScaled = true
            pingLabel.TextWrapped = true
            pingLabel.ZIndex = 10
            pingLabel.Parent = fpsPingFrame

            return fpsPingGui, fpsLabel, pingLabel
        end

        local function updateFpsPing(fpsLabel, pingLabel)
            print("‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï FPS ‡πÅ‡∏•‡∏∞ PING")
            local frameCount = 0
            local lastTime = tick()
            local connection

            connection = RunService.Heartbeat:Connect(function(deltaTime)
                frameCount = frameCount + 1
                if tick() - lastTime >= 0.5 then
                    local fps = math.round(frameCount / (tick() - lastTime) * 100) / 100
                    fpsLabel.Text = string.format("FPS: %.2f", fps)
                    local success, ping = pcall(function()
                        local statsItem = Stats.Network.ServerStatsItem["Data Ping"]
                        return statsItem and statsItem.Value or nil
                    end)
                    pingLabel.Text = success and ping and string.format("PING: %.0f ms", ping) or "PING: N/A"
                    frameCount = 0
                    lastTime = tick()
                end
            end)

            return connection
        end

        local fpsPingEnabled = savedStates.FpsPingEnabled
        local fpsPingToggle = Instance.new("TextButton")
        fpsPingToggle.Size = UDim2.new(0, 80, 0, 25)
        fpsPingToggle.Position = UDim2.new(0, 170, 0, 80)
        fpsPingToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        fpsPingToggle.Text = fpsPingEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
        fpsPingToggle.TextColor3 = Color3.new(1, 1, 1)
        fpsPingToggle.TextScaled = true
        fpsPingToggle.TextWrapped = true
        fpsPingToggle.ZIndex = 10
        fpsPingToggle.Parent = settingFrame

        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 8)
        buttonCorner.Parent = fpsPingToggle

        local fpsPingGui, fpsLabel, pingLabel = nil, nil, nil
        fpsPingToggle.MouseButton1Click:Connect(function()
            fpsPingEnabled = not fpsPingEnabled
            savedStates.FpsPingEnabled = fpsPingEnabled
            fpsPingToggle.Text = fpsPingEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
            print("‡∏™‡∏•‡∏±‡∏ö FPS+PING:", fpsPingEnabled)

            if fpsPingEnabled then
                if not PlayerGui:FindFirstChild("FpsPingGui") then
                    fpsPingGui, fpsLabel, pingLabel = createFpsPingGui()
                    fpsPingGui.Enabled = true
                    updateFpsPing(fpsLabel, pingLabel)
                end
            else
                if PlayerGui:FindFirstChild("FpsPingGui") then
                    PlayerGui.FpsPingGui:Destroy()
                    fpsPingGui, fpsLabel, pingLabel = nil, nil, nil
                end
            end
        end)

        if savedStates.FpsPingEnabled then
            fpsPingEnabled = true
            fpsPingToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
            fpsPingGui, fpsLabel, pingLabel = createFpsPingGui()
            fpsPingGui.Enabled = true
            updateFpsPing(fpsLabel, pingLabel)
        end

        -- üìä ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå "‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü" (PlayerInfoGUI)
        local function createPlayerInfoGui()
            print("‡∏™‡∏£‡πâ‡∏≤‡∏á PlayerInfoGUI")
            local ScreenGui = Instance.new("ScreenGui")
            ScreenGui.Name = "PlayerInfoGUI"
            ScreenGui.ResetOnSpawn = false
            ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
            ScreenGui.IgnoreGuiInset = true
            ScreenGui.Parent = PlayerGui

            local MainFrame = Instance.new("Frame")
            MainFrame.Size = UDim2.new(0, 400, 0, 350)
            MainFrame.Position = UDim2.new(0.5, -200, 0.5, -175)
            MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            MainFrame.BackgroundTransparency = 0.2
            MainFrame.BorderSizePixel = 0
            MainFrame.Active = true
            MainFrame.Draggable = true
            MainFrame.Parent = ScreenGui
            Instance.new("UICorner", MainFrame)

            local Title = Instance.new("TextLabel")
            Title.Text = "üìã Player Stats"
            Title.Size = UDim2.new(1, 0, 0, 30)
            Title.BackgroundTransparency = 1
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.Font = Enum.Font.GothamBold
            Title.TextScaled = true
            Title.Parent = MainFrame

            local Scroll = Instance.new("ScrollingFrame")
            Scroll.Size = UDim2.new(1, -10, 1, -40)
            Scroll.Position = UDim2.new(0, 5, 0, 35)
            Scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
            Scroll.ScrollBarThickness = 8
            Scroll.BackgroundTransparency = 1
            Scroll.Parent = MainFrame

            local UIList = Instance.new("UIListLayout")
            UIList.Padding = UDim.new(0, 5)
            UIList.SortOrder = Enum.SortOrder.LayoutOrder
            UIList.Parent = Scroll

            local function UpdateCanvasSize()
                task.wait(0.05)
                local contentSize = UIList.AbsoluteContentSize
                Scroll.CanvasSize = UDim2.new(0, 0, 0, contentSize.Y + 10)
            end
            UIList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(UpdateCanvasSize)

            local playerBlocks = {}
            local connections = {}

            local function CreatePlayerBlock(player)
                if playerBlocks[player] then
                    playerBlocks[player]:Destroy()
                end

                local PlayerFrame = Instance.new("Frame")
                PlayerFrame.Size = UDim2.new(1, -10, 0, 80)
                PlayerFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                PlayerFrame.BorderSizePixel = 0
                PlayerFrame.Parent = Scroll
                Instance.new("UICorner", PlayerFrame)
                playerBlocks[player] = PlayerFrame

                local Thumb = Instance.new("ImageLabel")
                Thumb.Size = UDim2.new(0, 60, 0, 60)
                Thumb.Position = UDim2.new(0, 10, 0.5, -30)
                Thumb.BackgroundTransparency = 1
                Thumb.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
                Thumb.Parent = PlayerFrame

                local ThumbStatus = Instance.new("TextLabel")
                ThumbStatus.Size = UDim2.new(0, 60, 0, 20)
                ThumbStatus.Position = UDim2.new(0, 10, 0.5, 30)
                ThumbStatus.Text = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î..."
                ThumbStatus.TextColor3 = Color3.new(1, 1, 0)
                ThumbStatus.BackgroundTransparency = 1
                ThumbStatus.TextScaled = true
                ThumbStatus.TextWrapped = true
                ThumbStatus.Parent = PlayerFrame

                spawn(function()
                    local maxRetries = 3
                    local retryCount = 0
                    while retryCount < maxRetries do
                        local success, content = pcall(function()
                            return "rbxthumb://type=AvatarHeadShot&id=" .. player.UserId .. "&w=100&h=100"
                        end)
                        if success and content then
                            Thumb.Image = content
                            ThumbStatus.Text = ""
                            break
-- üìä ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå "‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü" (PlayerInfoGUI)
        local function createPlayerInfoGui()
            print("‡∏™‡∏£‡πâ‡∏≤‡∏á PlayerInfoGUI")
            local ScreenGui = Instance.new("ScreenGui")
            ScreenGui.Name = "PlayerInfoGUI"
            ScreenGui.ResetOnSpawn = false
            ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
            ScreenGui.IgnoreGuiInset = true
            ScreenGui.Parent = PlayerGui

            local MainFrame = Instance.new("Frame")
            MainFrame.Size = UDim2.new(0, 400, 0, 350)
            MainFrame.Position = UDim2.new(0.5, -200, 0.5, -175)
            MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            MainFrame.BackgroundTransparency = 0.2
            MainFrame.BorderSizePixel = 0
            MainFrame.Active = true
            MainFrame.Draggable = true
            MainFrame.Parent = ScreenGui
            Instance.new("UICorner", MainFrame)

            local Title = Instance.new("TextLabel")
            Title.Text = "üìã Player Stats"
            Title.Size = UDim2.new(1, 0, 0, 30)
            Title.BackgroundTransparency = 1
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.Font = Enum.Font.GothamBold
            Title.TextScaled = true
            Title.Parent = MainFrame

            local Scroll = Instance.new("ScrollingFrame")
            Scroll.Size = UDim2.new(1, -10, 1, -40)
            Scroll.Position = UDim2.new(0, 5, 0, 35)
            Scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
            Scroll.ScrollBarThickness = 8
            Scroll.BackgroundTransparency = 1
            Scroll.Parent = MainFrame

            local UIList = Instance.new("UIListLayout")
            UIList.Padding = UDim.new(0, 5)
            UIList.SortOrder = Enum.SortOrder.LayoutOrder
            UIList.Parent = Scroll

            local function UpdateCanvasSize()
                task.wait(0.05)
                local contentSize = UIList.AbsoluteContentSize
                Scroll.CanvasSize = UDim2.new(0, 0, 0, contentSize.Y + 10)
            end
            UIList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(UpdateCanvasSize)

            local playerBlocks = {}
            local connections = {}

            local function CreatePlayerBlock(player)
                if playerBlocks[player] then
                    playerBlocks[player]:Destroy()
                end

                local PlayerFrame = Instance.new("Frame")
                PlayerFrame.Size = UDim2.new(1, -10, 0, 80)
                PlayerFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                PlayerFrame.BorderSizePixel = 0
                PlayerFrame.Parent = Scroll
                Instance.new("UICorner", PlayerFrame)
                playerBlocks[player] = PlayerFrame

                local Thumb = Instance.new("ImageLabel")
                Thumb.Size = UDim2.new(0, 60, 0, 60)
                Thumb.Position = UDim2.new(0, 10, 0.5, -30)
                Thumb.BackgroundTransparency = 1
                Thumb.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
                Thumb.Parent = PlayerFrame

                local ThumbStatus = Instance.new("TextLabel")
                ThumbStatus.Size = UDim2.new(0, 60, 0, 20)
                ThumbStatus.Position = UDim2.new(0, 10, 0.5, 30)
                ThumbStatus.Text = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î..."
                ThumbStatus.TextColor3 = Color3.new(1, 1, 0)
                ThumbStatus.BackgroundTransparency = 1
                ThumbStatus.TextScaled = true
                ThumbStatus.TextWrapped = true
                ThumbStatus.Parent = PlayerFrame

                spawn(function()
                    local maxRetries = 3
                    local retryCount = 0
                    while retryCount < maxRetries do
                        local success, content = pcall(function()
                            return "rbxthumb://type=AvatarHeadShot&id=" .. player.UserId .. "&w=100&h=100"
                        end)
                        if success and content then
                            Thumb.Image = content
                            ThumbStatus.Text = ""
                            break
                        else
                            retryCount = retryCount + 1
                            ThumbStatus.Text = retryCount < maxRetries and "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î..." or "‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß"
                            task.wait(1)
                        end
                    end
                end)

                local Name = Instance.new("TextLabel")
                Name.Size = UDim2.new(0, 200, 0, 20)
                Name.Position = UDim2.new(0, 80, 0, 10)
                Name.Text = player.Name
                Name.Font = Enum.Font.GothamBold
                Name.TextColor3 = Color3.fromRGB(255, 255, 255)
                Name.TextScaled = true
                Name.BackgroundTransparency = 1
                Name.Parent = PlayerFrame

                local Info = Instance.new("TextLabel")
                Info.Size = UDim2.new(1, -90, 0, 40)
                Info.Position = UDim2.new(0, 80, 0, 35)
                Info.Text = "Loading..."
                Info.Font = Enum.Font.Gotham
                Info.TextColor3 = Color3.fromRGB(200, 200, 200)
                Info.TextScaled = true
                Info.BackgroundTransparency = 1
                Info.TextXAlignment = Enum.TextXAlignment.Left
                Info.Parent = PlayerFrame

                local function UpdateStats()
                    local success, err = pcall(function()
                        local stats = player:FindFirstChild("leaderstats")
                        local durability = "N/A"
                        if stats then
                            local brawls = stats:FindFirstChild("Brawls") and stats.Brawls.Value or "N/A"
                            local kills = stats:FindFirstChild("Kills") and stats.Kills.Value or "N/A"
                            local rebirths = stats:FindFirstChild("Rebirths") and stats.Rebirths.Value or "N/A"
                            local strength = stats:FindFirstChild("Strength") and stats.Strength.Value or "N/A"
                            durability = stats:FindFirstChild("Durability") and stats.Durability.Value or player:FindFirstChild("Durability") and player.Durability.Value or "N/A"
                            Info.Text = string.format("Brawls: %s  |  Kills: %s\nRebirths: %s  |  STR: %s  |  DUR: %s", brawls, kills, rebirths, strength, durability)
                        else
                            Info.Text = "No leaderstats"
                        end
                    end)
                    if not success then
                        Info.Text = "Error: " .. err
                    end
                end

                UpdateStats()

                if player:FindFirstChild("leaderstats") then
                    for _, stat in ipairs(player.leaderstats:GetChildren()) do
                        local conn = stat.Changed:Connect(UpdateStats)
                        table.insert(connections, conn)
                    end
                end
                if player:FindFirstChild("Durability") then
                    local conn = player.Durability.Changed:Connect(UpdateStats)
                    table.insert(connections, conn)
                end

                UpdateCanvasSize()
                return UpdateStats
            end

            local playerAddedConn = Players.PlayerAdded:Connect(function(player)
                CreatePlayerBlock(player)
            end)

            local playerRemovingConn = Players.PlayerRemoving:Connect(function(player)
                if playerBlocks[player] then
                    playerBlocks[player]:Destroy()
                    playerBlocks[player] = nil
                end
                UpdateCanvasSize()
            end)

            for _, p in pairs(Players:GetPlayers()) do
                CreatePlayerBlock(p)
            end

            return ScreenGui, function()
                for _, conn in ipairs(connections) do
                    conn:Disconnect()
                end
                playerAddedConn:Disconnect()
                playerRemovingConn:Disconnect()
            end
        end

        local serverInfoEnabled = savedStates.ServerInfoEnabled
        local serverInfoToggle = Instance.new("TextButton")
        serverInfoToggle.Size = UDim2.new(0, 80, 0, 25)
        serverInfoToggle.Position = UDim2.new(0, 170, 0, 120)
        serverInfoToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        serverInfoToggle.Text = serverInfoEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
        serverInfoToggle.TextColor3 = Color3.new(1, 1, 1)
        serverInfoToggle.TextScaled = true
        serverInfoToggle.TextWrapped = true
        serverInfoToggle.ZIndex = 10
        serverInfoToggle.Parent = settingFrame

        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 8)
        buttonCorner.Parent = serverInfoToggle

        local serverInfoGui, cleanupConnections = nil, nil
        serverInfoToggle.MouseButton1Click:Connect(function()
            serverInfoEnabled = not serverInfoEnabled
            savedStates.ServerInfoEnabled = serverInfoEnabled
            serverInfoToggle.Text = serverInfoEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
            print("‡∏™‡∏•‡∏±‡∏ö PlayerInfoGUI:", serverInfoEnabled)

            if serverInfoEnabled then
                if not PlayerGui:FindFirstChild("PlayerInfoGUI") then
                    serverInfoGui, cleanupConnections = createPlayerInfoGui()
                    serverInfoGui.Enabled = true
                end
            else
                if PlayerGui:FindFirstChild("PlayerInfoGUI") then
                    if cleanupConnections then
                        cleanupConnections()
                    end
                    PlayerGui.PlayerInfoGUI:Destroy()
                    serverInfoGui, cleanupConnections = nil, nil
                end
            end
        end)

        if savedStates.ServerInfoEnabled then
            serverInfoEnabled = true
            serverInfoToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
            serverInfoGui, cleanupConnections = createPlayerInfoGui()
            serverInfoGui.Enabled = true
        end
-------------------------------------
        -- üèãÔ∏è‚Äç‚ôÇÔ∏è ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å "‡∏≠‡πâ‡∏≠‡πÇ‡∏ï‡πâ‡∏¢‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å"
        -------------------------------------
        local weightFrame = Instance.new("Frame")
        weightFrame.Name = "‡∏≠‡πâ‡∏≠‡πÇ‡∏ï‡πâ‡∏¢‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å"
        weightFrame.Size = UDim2.new(1, 0, 1, 0)
        weightFrame.Visible = false
        weightFrame.BackgroundTransparency = 1
        weightFrame.ZIndex = 10
        weightFrame.Parent = contentFrame

        local weightTitle = Instance.new("TextLabel")
        weightTitle.Text = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢"
        weightTitle.Size = UDim2.new(0, 300, 0, 30)
        weightTitle.Position = UDim2.new(0, 10, 0, 10)
        weightTitle.TextColor3 = Color3.new(1, 1, 1)
        weightTitle.BackgroundTransparency = 1
        weightTitle.TextScaled = true
        weightTitle.TextWrapped = true
        weightTitle.ZIndex = 10
        weightTitle.Parent = weightFrame

        local chooseButton = Instance.new("TextButton")
        chooseButton.Size = UDim2.new(0, 150, 0, 35)
        chooseButton.Position = UDim2.new(0, 10, 0, 50)
        chooseButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        chooseButton.Text = savedStates.WeightExercise and "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: " .. savedStates.WeightExercise or "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å"
        chooseButton.TextColor3 = Color3.new(1, 1, 1)
        chooseButton.TextScaled = true
        chooseButton.TextWrapped = true
        chooseButton.ZIndex = 10
        chooseButton.Parent = weightFrame

        local startButton = Instance.new("TextButton")
        startButton.Size = UDim2.new(0, 100, 0, 35)
        startButton.Position = UDim2.new(0, 170, 0, 50)
        startButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        startButton.Text = savedStates.WeightRunning and "‡∏´‡∏¢‡∏∏‡∏î" or "‡πÄ‡∏£‡∏¥‡πà‡∏°"
        startButton.TextColor3 = Color3.new(1, 1, 1)
        startButton.TextScaled = true
        startButton.TextWrapped = true
        startButton.ZIndex = 10
        startButton.Parent = weightFrame

        local spinLabel = Instance.new("TextLabel")
        spinLabel.Text = "‡∏≠‡πâ‡∏≠‡πÇ‡∏ï‡πâ‡∏™‡∏õ‡∏¥‡∏ô:"
        spinLabel.Size = UDim2.new(0, 150, 0, 25)
        spinLabel.Position = UDim2.new(0, 10, 0, 90)
        spinLabel.TextColor3 = Color3.new(1, 1, 1)
        spinLabel.BackgroundTransparency = 1
        spinLabel.TextScaled = true
        spinLabel.TextWrapped = true
        spinLabel.ZIndex = 10
        spinLabel.Parent = weightFrame

        local spinToggle = Instance.new("TextButton")
        spinToggle.Size = UDim2.new(0, 100, 0, 25)
        spinToggle.Position = UDim2.new(0, 170, 0, 90)
        spinToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        spinToggle.Text = savedStates.SpinEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
        spinToggle.TextColor3 = Color3.new(1, 1, 1)
        spinToggle.TextScaled = true
        spinToggle.TextWrapped = true
        spinToggle.ZIndex = 10
        spinToggle.Parent = weightFrame

        local rebirthLabel = Instance.new("TextLabel")
        rebirthLabel.Text = "‡∏≠‡πâ‡∏≠‡πÇ‡∏ï‡πâ‡∏£‡∏µ‡πÄ‡∏ö‡∏¥‡∏£‡πå‡∏î:"
        rebirthLabel.Size = UDim2.new(0, 150, 0, 25)
        rebirthLabel.Position = UDim2.new(0, 10, 0, 120)
        rebirthLabel.TextColor3 = Color3.new(1, 1, 1)
        rebirthLabel.BackgroundTransparency = 1
        rebirthLabel.TextScaled = true
        rebirthLabel.TextWrapped = true
        rebirthLabel.ZIndex = 10
        rebirthLabel.Parent = weightFrame

        local rebirthToggle = Instance.new("TextButton")
        rebirthToggle.Size = UDim2.new(0, 100, 0, 25)
        rebirthToggle.Position = UDim2.new(0, 170, 0, 120)
        rebirthToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        rebirthToggle.Text = savedStates.RebirthEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
        rebirthToggle.TextColor3 = Color3.new(1, 1, 1)
        rebirthToggle.TextScaled = true
        rebirthToggle.TextWrapped = true
        rebirthToggle.ZIndex = 10
        rebirthToggle.Parent = weightFrame

        local proteinLabel = Instance.new("TextLabel")
        proteinLabel.Text = "‡∏≠‡πâ‡∏≠‡πÇ‡∏ï‡πâ‡∏Å‡∏¥‡∏ô‡πÇ‡∏õ‡∏£‡∏ï‡∏±‡∏ô:"
        proteinLabel.Size = UDim2.new(0, 150, 0, 25)
        proteinLabel.Position = UDim2.new(0, 10, 0, 150)
        proteinLabel.TextColor3 = Color3.new(1, 1, 1)
        proteinLabel.BackgroundTransparency = 1
        proteinLabel.TextScaled = true
        proteinLabel.TextWrapped = true
        proteinLabel.ZIndex = 10
        proteinLabel.Parent = weightFrame

        local proteinToggle = Instance.new("TextButton")
        proteinToggle.Size = UDim2.new(0, 100, 0, 25)
        proteinToggle.Position = UDim2.new(0, 170, 0, 150)
        proteinToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        proteinToggle.Text = savedStates.ProteinEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
        proteinToggle.TextColor3 = Color3.new(1, 1, 1)
        proteinToggle.TextScaled = true
        proteinToggle.TextWrapped = true
        proteinToggle.ZIndex = 10
        proteinToggle.Parent = weightFrame

        -- ‡πÄ‡∏û‡∏¥‡πà‡∏° "‡∏≠‡πâ‡∏≠‡πÇ‡∏ï‡πâ‡∏à‡∏≠‡∏¢‡πÄ‡∏ß‡∏ó‡∏µ"
        local joinBrawlLabel = Instance.new("TextLabel")
        joinBrawlLabel.Text = "‡∏≠‡πâ‡∏≠‡πÇ‡∏ï‡πâ‡∏à‡∏≠‡∏¢‡πÄ‡∏ß‡∏ó‡∏µ:"
        joinBrawlLabel.Size = UDim2.new(0, 150, 0, 25)
        joinBrawlLabel.Position = UDim2.new(0, 10, 0, 180)
        joinBrawlLabel.TextColor3 = Color3.new(1, 1, 1)
        joinBrawlLabel.BackgroundTransparency = 1
        joinBrawlLabel.TextScaled = true
        joinBrawlLabel.TextWrapped = true
        joinBrawlLabel.ZIndex = 10
        joinBrawlLabel.Parent = weightFrame

        local joinBrawlToggle = Instance.new("TextButton")
        joinBrawlToggle.Size = UDim2.new(0, 100, 0, 25)
        joinBrawlToggle.Position = UDim2.new(0, 170, 0, 180)
        joinBrawlToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        joinBrawlToggle.Text = savedStates.JoinBrawlEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
        joinBrawlToggle.TextColor3 = Color3.new(1, 1, 1)
        joinBrawlToggle.TextScaled = true
        joinBrawlToggle.TextWrapped = true
        joinBrawlToggle.ZIndex = 10
        joinBrawlToggle.Parent = weightFrame

        local joinBrawlCorner = Instance.new("UICorner")
        joinBrawlCorner.CornerRadius = UDim.new(0, 8)
        joinBrawlCorner.Parent = joinBrawlToggle

        -- ‡πÄ‡∏û‡∏¥‡πà‡∏° "‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß2"
        local sizeLabel = Instance.new("TextLabel")
        sizeLabel.Text = "‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß2:"
        sizeLabel.Size = UDim2.new(0, 80, 0, 25)
        sizeLabel.Position = UDim2.new(0, 10, 0, 210)
        sizeLabel.TextColor3 = Color3.new(1, 1, 1)
        sizeLabel.BackgroundTransparency = 1
        sizeLabel.TextScaled = true
        sizeLabel.TextWrapped = true
        sizeLabel.ZIndex = 10
        sizeLabel.Parent = weightFrame

        local sizeBox = Instance.new("TextBox")
        sizeBox.Size = UDim2.new(0, 80, 0, 25)
        sizeBox.Position = UDim2.new(0, 100, 0, 210)
        sizeBox.Text = savedStates.SizeValue or "2"
        sizeBox.TextColor3 = Color3.new(1, 1, 1)
        sizeBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        sizeBox.TextScaled = true
        sizeBox.TextWrapped = true
        sizeBox.ZIndex = 10
        sizeBox.Parent = weightFrame

        local sizeToggle = Instance.new("TextButton")
        sizeToggle.Size = UDim2.new(0, 80, 0, 25)
        sizeToggle.Position = UDim2.new(0, 190, 0, 210)
        sizeToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        sizeToggle.Text = savedStates.SizeEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
        sizeToggle.TextColor3 = Color3.new(1, 1, 1)
        sizeToggle.TextScaled = true
        sizeToggle.TextWrapped = true
        sizeToggle.ZIndex = 10
        sizeToggle.Parent = weightFrame

        local sizeCorner = Instance.new("UICorner")
        sizeCorner.CornerRadius = UDim.new(0, 8)
        sizeCorner.Parent = sizeToggle

        local selectedExercise = savedStates.WeightExercise
        local running = savedStates.WeightRunning
        local spinEnabled = savedStates.SpinEnabled
        local rebirthEnabled = savedStates.RebirthEnabled
        local proteinEnabled = savedStates.ProteinEnabled
        local joinBrawlEnabled = savedStates.JoinBrawlEnabled or false
        local sizeEnabled = savedStates.SizeEnabled or false
        local muscleEvent = LocalPlayer:WaitForChild("muscleEvent", 5)
        local backpack = LocalPlayer:WaitForChild("Backpack", 5)
        local fortuneWheelRemote = ReplicatedStorage:WaitForChild("rEvents", 5) and ReplicatedStorage.rEvents:WaitForChild("openFortuneWheelRemote", 5)
        local fortuneWheel = ReplicatedStorage:WaitForChild("fortuneWheelChances", 5) and ReplicatedStorage.fortuneWheelChances:WaitForChild("Fortune Wheel", 5)
        local rebirthRemote = ReplicatedStorage:WaitForChild("rEvents", 5) and ReplicatedStorage.rEvents:WaitForChild("rebirthRemote", 5)
        local brawlEvent = ReplicatedStorage:WaitForChild("rEvents", 5) and ReplicatedStorage.rEvents:WaitForChild("brawlEvent", 5)
        local changeSpeedSizeRemote = ReplicatedStorage:WaitForChild("rEvents", 5) and ReplicatedStorage.rEvents:WaitForChild("changeSpeedSizeRemote", 5)

        if not muscleEvent then warn("‡πÑ‡∏°‡πà‡∏û‡∏ö muscleEvent!") end
        if not backpack then warn("‡πÑ‡∏°‡πà‡∏û‡∏ö Backpack!") end
        if not fortuneWheelRemote then warn("‡πÑ‡∏°‡πà‡∏û‡∏ö openFortuneWheelRemote!") end
        if not fortuneWheel then warn("‡πÑ‡∏°‡πà‡∏û‡∏ö Fortune Wheel!") end
        if not rebirthRemote then warn("‡πÑ‡∏°‡πà‡∏û‡∏ö rebirthRemote!") end
        if not brawlEvent then warn("‡πÑ‡∏°‡πà‡∏û‡∏ö brawlEvent!") end
        if not changeSpeedSizeRemote then warn("‡πÑ‡∏°‡πà‡∏û‡∏ö changeSpeedSizeRemote!") end

        chooseButton.MouseButton1Click:Connect(function()
            if PlayerGui:FindFirstChild("SelectionGui") then
                PlayerGui.SelectionGui:Destroy()
            end

            local choices = {"Weight", "Handstands", "Pushups", "Situps"}
            local selectionGui = Instance.new("Frame")
            selectionGui.Name = "SelectionGui"
            selectionGui.Size = UDim2.new(0, 200, 0, 180)
            selectionGui.Position = UDim2.new(0.5, -100, 0.5, -90)
            selectionGui.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            selectionGui.BorderSizePixel = 0
            selectionGui.Active = true
            selectionGui.Draggable = true
            selectionGui.ZIndex = 10
            selectionGui.Parent = gui

            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0, 8)
            corner.Parent = selectionGui

            for i, choice in ipairs(choices) do
                local btn = Instance.new("TextButton")
                btn.Size = UDim2.new(1, -10, 0, 35)
                btn.Position = UDim2.new(0, 5, 0, (i - 1) * 40 + 5)
                btn.Text = choice
                btn.TextScaled = true
                btn.TextWrapped = true
                btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
                btn.TextColor3 = Color3.new(1, 1, 1)
                btn.ZIndex = 10
                btn.Parent = selectionGui

                local btnCorner = Instance.new("UICorner")
                btnCorner.CornerRadius = UDim.new(0, 8)
                btnCorner.Parent = btn

                btn.MouseButton1Click:Connect(function()
                    selectedExercise = choice
                    savedStates.WeightExercise = choice
                    chooseButton.Text = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: " .. choice
                    selectionGui:Destroy()
                    print("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Exercise:", choice)
                end)
            end
        end)

        startButton.MouseButton1Click:Connect(function()
            if not selectedExercise then
                startButton.Text = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô!"
                task.wait(1)
                startButton.Text = running and "‡∏´‡∏¢‡∏∏‡∏î" or "‡πÄ‡∏£‡∏¥‡πà‡∏°"
                print("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏¢‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å: ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Exercise ‡∏Å‡πà‡∏≠‡∏ô")
                return
            end

            running = not running
            savedStates.WeightRunning = running
            startButton.Text = running and "‡∏´‡∏¢‡∏∏‡∏î" or "‡πÄ‡∏£‡∏¥‡πà‡∏°"
            print("‡∏™‡∏•‡∏±‡∏ö‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏¢‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å:", running)

            if running then
                local tool = backpack and backpack:FindFirstChild(selectedExercise)
                if tool and humanoid then
                    humanoid:EquipTool(tool)
                else
                    startButton.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°!"
                    task.wait(1)
                    startButton.Text = running and "‡∏´‡∏¢‡∏∏‡∏î" or "‡πÄ‡∏£‡∏¥‡πà‡∏°"
                    running = false
                    savedStates.WeightRunning = false
                    print("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏¢‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
                    return
                end

                spawn(function()
                    while running do
                        if muscleEvent then
                            muscleEvent:FireServer("rep")
                        else
                            startButton.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö Remote!"
                            task.wait(1)
                            startButton.Text = running and "‡∏´‡∏¢‡∏∏‡∏î" or "‡πÄ‡∏£‡∏¥‡πà‡∏°"
                            running = false
                            savedStates.WeightRunning = false
                            print("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏¢‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ‡πÑ‡∏°‡πà‡∏û‡∏ö muscleEvent")
                            break
                        end
                        task.wait(math.random(0.08, 0.12))
                    end
                end)
            end
        end)

        spinToggle.MouseButton1Click:Connect(function()
            spinEnabled = not spinEnabled
            savedStates.SpinEnabled = spinEnabled
            spinToggle.Text = spinEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
            print("‡∏™‡∏•‡∏±‡∏ö‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏™‡∏õ‡∏¥‡∏ô:", spinEnabled)

            if spinEnabled then
                spawn(function()
                    while spinEnabled do
                        if fortuneWheelRemote and fortuneWheel then
                            local args = {"openFortuneWheel", fortuneWheel}
                            fortuneWheelRemote:InvokeServer(unpack(args))
                        else
                            spinToggle.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö Remote!"
                            task.wait(1)
                            spinToggle.Text = spinEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
                            spinEnabled = false
                            savedStates.SpinEnabled = false
                            print("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏™‡∏õ‡∏¥‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ‡πÑ‡∏°‡πà‡∏û‡∏ö Remote")
                            break
                        end
                        task.wait(1)
                    end
                end)
            end
        end)

        rebirthToggle.MouseButton1Click:Connect(function()
            rebirthEnabled = not rebirthEnabled
            savedStates.RebirthEnabled = rebirthEnabled
            rebirthToggle.Text = rebirthEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
            print("‡∏™‡∏•‡∏±‡∏ö‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏£‡∏µ‡πÄ‡∏ö‡∏¥‡∏£‡πå‡∏î:", rebirthEnabled)

            if rebirthEnabled then
                spawn(function()
                    while rebirthEnabled do
                        if rebirthRemote then
                            local args = {"rebirthRequest"}
                            rebirthRemote:InvokeServer(unpack(args))
                        else
                            rebirthToggle.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö Remote!"
                            task.wait(1)
                            rebirthToggle.Text = rebirthEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
                            rebirthEnabled = false
                            savedStates.RebirthEnabled = false
                            print("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏£‡∏µ‡πÄ‡∏ö‡∏¥‡∏£‡πå‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ‡πÑ‡∏°‡πà‡∏û‡∏ö Remote")
                            break
                        end
                        task.wait(1)
                    end
                end)
            end
        end)

        proteinToggle.MouseButton1Click:Connect(function()
            proteinEnabled = not proteinEnabled
            savedStates.ProteinEnabled = proteinEnabled
            proteinToggle.Text = proteinEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
            print("‡∏™‡∏•‡∏±‡∏ö‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏Å‡∏¥‡∏ô‡πÇ‡∏õ‡∏£‡∏ï‡∏±‡∏ô:", proteinEnabled)

            if proteinEnabled then
                local proteinTools = {"Protein Bar", "Protein Shake", "ULTRA Shake", "TOUGH Bar"}
                local foundTool = nil
                for _, toolName in ipairs(proteinTools) do
                    local tool = backpack and backpack:FindFirstChild(toolName)
                    if tool then
                        foundTool = tool
                        break
                    end
                end

                if foundTool and humanoid then
                    humanoid:EquipTool(foundTool)
                    task.wait(0.1)
                    foundTool:Activate()
                else
                    proteinToggle.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö Tool!"
                    task.wait(1)
                    proteinToggle.Text = proteinEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
                    proteinEnabled = false
                    savedStates.ProteinEnabled = false
                    print("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏Å‡∏¥‡∏ô‡πÇ‡∏õ‡∏£‡∏ï‡∏±‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ‡πÑ‡∏°‡πà‡∏û‡∏ö Tool")
                end
            end
        end)

        joinBrawlToggle.MouseButton1Click:Connect(function()
            joinBrawlEnabled = not joinBrawlEnabled
            savedStates.JoinBrawlEnabled = joinBrawlEnabled
            joinBrawlToggle.Text = joinBrawlEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
            print("‡∏™‡∏•‡∏±‡∏ö‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏à‡∏≠‡∏¢‡πÄ‡∏ß‡∏ó‡∏µ:", joinBrawlEnabled)

            if joinBrawlEnabled then
                spawn(function()
                    while joinBrawlEnabled do
                        if brawlEvent then
                            local args = {"joinBrawl"}
                            local success, err = pcall(function()
                                brawlEvent:FireServer(unpack(args))
                            end)
                            if not success then
                                joinBrawlToggle.Text = "‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!"
                                task.wait(1)
                                joinBrawlToggle.Text = joinBrawlEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
                                joinBrawlEnabled = false
                                savedStates.JoinBrawlEnabled = false
                                print("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏à‡∏≠‡∏¢‡πÄ‡∏ß‡∏ó‡∏µ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " .. err)
                                break
                            end
                        else
                            joinBrawlToggle.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö Remote!"
                            task.wait(1)
                            joinBrawlToggle.Text = joinBrawlEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
                            joinBrawlEnabled = false
                            savedStates.JoinBrawlEnabled = false
                            print("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏à‡∏≠‡∏¢‡πÄ‡∏ß‡∏ó‡∏µ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ‡πÑ‡∏°‡πà‡∏û‡∏ö brawlEvent")
                            break
                        end
                        task.wait(math.random(0.95, 1.05))
                    end
                end)
            end
        end)

        sizeBox:GetPropertyChangedSignal("Text"):Connect(function()
            savedStates.SizeValue = sizeBox.Text
            print("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å SizeValue:", savedStates.SizeValue)
        end)

        sizeToggle.MouseButton1Click:Connect(function()
            sizeEnabled = not sizeEnabled
            savedStates.SizeEnabled = sizeEnabled
            sizeToggle.Text = sizeEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
            print("‡∏™‡∏•‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß:", sizeEnabled)

            if sizeEnabled then
                local size = tonumber(savedStates.SizeValue) or 2
                if changeSpeedSizeRemote then
                    local args = {"changeSize", size}
                    local success, err = pcall(function()
                        changeSpeedSizeRemote:InvokeServer(unpack(args))
                    end)
                    if not success then
                        sizeToggle.Text = "‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!"
                        task.wait(1)
                        sizeToggle.Text = sizeEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
                        sizeEnabled = false
                        savedStates.SizeEnabled = false
                        print("‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " .. err)
                    end
                else
                    sizeToggle.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö Remote!"
                    task.wait(1)
                    sizeToggle.Text = sizeEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
                    sizeEnabled = false
                    savedStates.SizeEnabled = false
                    print("‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ‡πÑ‡∏°‡πà‡∏û‡∏ö changeSpeedSizeRemote")
                end
            else
                if changeSpeedSizeRemote then
                    local args = {"changeSize", 1}
                    pcall(function()
                        changeSpeedSizeRemote:InvokeServer(unpack(args))
                    end)
                end
            end
        end)

        backpack.ChildAdded:Connect(function(child)
            if running and child.Name == selectedExercise and humanoid then
                task.wait(0.1)
                humanoid:EquipTool(child)
                print("‡∏ñ‡∏∑‡∏≠ Tool ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥:", child.Name)
            end
            if proteinEnabled and table.find({"Protein Bar", "Protein Shake", "ULTRA Shake", "TOUGH Bar"}, child.Name) and humanoid then
                task.wait(0.1)
                humanoid:EquipTool(child)
                child:Activate()
                print("‡∏Å‡∏¥‡∏ô‡πÇ‡∏õ‡∏£‡∏ï‡∏±‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥:", child.Name)
            end
        end)

        local saveEnabled = false
        saveToggle.MouseButton1Click:Connect(function()
            saveEnabled = not saveEnabled
            saveToggle.Text = saveEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
            print("‡∏™‡∏•‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:", saveEnabled)
            if saveEnabled then
                if savedStates.Speed then
                    speedEnabled = true
                    speedToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
                    if humanoid then
                        local speed = tonumber(savedStates.SpeedValue) or 16
                        humanoid.WalkSpeed = speed
                    end
                end
                if savedStates.Jump then
                    jumpEnabled = true
                    jumpToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
                    if humanoid then
                        local jump = tonumber(savedStates.JumpValue) or 50
                        if jump <= 150 then
                            humanoid.JumpPower = jump
                        end
                    end
                end
                if savedStates.WeightRunning and savedStates.WeightExercise then
                    running = true
                    startButton.Text = "‡∏´‡∏¢‡∏∏‡∏î"
                    chooseButton.Text = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: " .. savedStates.WeightExercise
                    selectedExercise = savedStates.WeightExercise
                    local tool = backpack and backpack:FindFirstChild(savedStates.WeightExercise)
                    if tool and humanoid then
                        humanoid:EquipTool(tool)
                    end
                    spawn(function()
                        while running and saveEnabled do
                            if muscleEvent then
                                muscleEvent:FireServer("rep")
                            end
                            task.wait(math.random(0.08, 0.12))
                        end
                    end)
                end
                if savedStates.SpinEnabled then
                    spinEnabled = true
                    spinToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
                    spawn(function()
                        while spinEnabled and saveEnabled do
                            if fortuneWheelRemote and fortuneWheel then
                                local args = {"openFortuneWheel", fortuneWheel}
                                fortuneWheelRemote:InvokeServer(unpack(args))
                            end
                            task.wait(1)
                        end
                    end)
                end
                if savedStates.RebirthEnabled then
                    rebirthEnabled = true
                    rebirthToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
                    spawn(function()
                        while rebirthEnabled and saveEnabled do
                            if rebirthRemote then
                                local args = {"rebirthRequest"}
                                rebirthRemote:InvokeServer(unpack(args))
                            end
                            task.wait(1)
                        end
                    end)
                end
                if savedStates.ProteinEnabled then
                    proteinEnabled = true
                    proteinToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
                    local proteinTools = {"Protein Bar", "Protein Shake", "ULTRA Shake", "TOUGH Bar"}
                    local foundTool = nil
                    for _, toolName in ipairs(proteinTools) do
                        local tool = backpack and backpack:FindFirstChild(toolName)
                        if tool then
                            foundTool = tool
                            break
                        end
                    end
                    if foundTool and humanoid then
                        humanoid:EquipTool(foundTool)
                        task.wait(0.1)
                        foundTool:Activate()
                    end
                end
                if savedStates.FpsPingEnabled then
                    fpsPingEnabled = true
                    fpsPingToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
                    fpsPingGui, fpsLabel, pingLabel = createFpsPingGui()
                    fpsPingGui.Enabled = true
                    updateFpsPing(fpsLabel, pingLabel)
                end
                if savedStates.ServerInfoEnabled then
                    serverInfoEnabled = true
                    serverInfoToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
                    serverInfoGui, cleanupConnections = createPlayerInfoGui()
                    serverInfoGui.Enabled = true
                end
                if savedStates.JoinBrawlEnabled then
                    joinBrawlEnabled = true
                    joinBrawlToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
                    spawn(function()
                        while joinBrawlEnabled and saveEnabled do
                            if brawlEvent then
                                local args = {"joinBrawl"}
                                pcall(function()
                                    brawlEvent:FireServer(unpack(args))
                                end)
                            end
                            task.wait(math.random(0.95, 1.05))
                        end
                    end)
                end
                if savedStates.SizeEnabled then
                    sizeEnabled = true
                    sizeToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
                    if changeSpeedSizeRemote then
                        local size = tonumber(savedStates.SizeValue) or 2
                        local args = {"changeSize", size}
                        pcall(function()
                            changeSpeedSizeRemote:InvokeServer(unpack(args))
                        end)
                    end
                end
            end
        end)

        for name, button in pairs(tabs) do
            button.MouseButton1Click:Connect(function()
                showTab(name)
            end)
        end

        if savedStates.WeightRunning and savedStates.WeightExercise then
            running = true
            startButton.Text = "‡∏´‡∏¢‡∏∏‡∏î"
            chooseButton.Text = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: " .. savedStates.WeightExercise
            selectedExercise = savedStates.WeightExercise
            local tool = backpack and backpack:FindFirstChild(savedStates.WeightExercise)
            if tool and humanoid then
                humanoid:EquipTool(tool)
            end
            spawn(function()
                while running do
                    if muscleEvent then
                        muscleEvent:FireServer("rep")
                    end
                    task.wait(math.random(0.08, 0.12))
                end
            end)
        end
        if savedStates.SpinEnabled then
            spinEnabled = true
            spinToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
            spawn(function()
                while spinEnabled do
                    if fortuneWheelRemote and fortuneWheel then
                        local args = {"openFortuneWheel", fortuneWheel}
                        fortuneWheelRemote:InvokeServer(unpack(args))
                    end
                    task.wait(1)
                end
            end)
        end
        if savedStates.RebirthEnabled then
            rebirthEnabled = true
            rebirthToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
            spawn(function()
                while rebirthEnabled do
                    if rebirthRemote then
                        local args = {"rebirthRequest"}
                        rebirthRemote:InvokeServer(unpack(args))
                    end
                    task.wait(1)
                end
            end)
        end
        if savedStates.ProteinEnabled then
            proteinEnabled = true
            proteinToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
            local proteinTools = {"Protein Bar", "Protein Shake", "ULTRA Shake", "TOUGH Bar"}
            local foundTool = nil
            for _, toolName in ipairs(proteinTools) do
                local tool = backpack and backpack:FindFirstChild(toolName)
                if tool then
                    foundTool = tool
                    break
                end
            end
            if foundTool and humanoid then
                humanoid:EquipTool(foundTool)
                task.wait(0.1)
                foundTool:Activate()
            end
        end
        if savedStates.JoinBrawlEnabled then
            joinBrawlEnabled = true
            joinBrawlToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
            spawn(function()
                while joinBrawlEnabled do
                    if brawlEvent then
                        local args = {"joinBrawl"}
                        pcall(function()
                            brawlEvent:FireServer(unpack(args))
                        end)
                    end
                    task.wait(math.random(0.95, 1.05))
                end
            end)
        end
        if savedStates.SizeEnabled then
            sizeEnabled = true
            sizeToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
            if changeSpeedSizeRemote then
                local size = tonumber(savedStates.SizeValue) or 2
                local args = {"changeSize", size}
                pcall(function()
                    changeSpeedSizeRemote:InvokeServer(unpack(args))
                end)
            end
        end

        showTab("‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
        print("‡∏™‡∏£‡πâ‡∏≤‡∏á GUI ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
    end

    LocalPlayer.CharacterAdded:Connect(function(char)
        humanoid = char:WaitForChild("Humanoid")
        if savedStates.Speed and humanoid then
            local speed = tonumber(savedStates.SpeedValue) or 16
            pcall(function()
                humanoid.WalkSpeed = speed
            end)
        end
        if savedStates.Jump and humanoid then
            local jump = tonumber(savedStates.JumpValue) or 50
            if jump <= 150 then
                pcall(function()
                    humanoid.JumpPower = jump
                end)
            end
        end
        if savedStates.WeightRunning and savedStates.WeightExercise then
            local backpack = LocalPlayer:WaitForChild("Backpack", 5)
            local tool = backpack and backpack:FindFirstChild(savedStates.WeightExercise)
            if tool and humanoid then
                humanoid:EquipTool(tool)
            end
        end
        if savedStates.ProteinEnabled then
            local proteinTools = {"Protein Bar", "Protein Shake", "ULTRA Shake", "TOUGH Bar"}
            local foundTool = nil
            for _, toolName in ipairs(proteinTools) do
                local tool = backpack and backpack:FindFirstChild(toolName)
                if tool then
                    foundTool = tool
                    break
                end
            end
            if foundTool and humanoid then
                humanoid:EquipTool(foundTool)
                task.wait(0.1)
                foundTool:Activate()
            end
        end
        if savedStates.FpsPingEnabled and not PlayerGui:FindFirstChild("FpsPingGui") then
            local fpsPingGui, fpsLabel, pingLabel = createFpsPingGui()
            fpsPingGui.Enabled = true
            updateFpsPing(fpsLabel, pingLabel)
        end
        if savedStates.ServerInfoEnabled and not PlayerGui:FindFirstChild("PlayerInfoGUI") then
            local serverInfoGui, cleanupConnections = createPlayerInfoGui()
            serverInfoGui.Enabled = true
        end
        if savedStates.JoinBrawlEnabled then
            joinBrawlEnabled = true
            joinBrawlToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
            spawn(function()
                while joinBrawlEnabled do
                    if brawlEvent then
                        local args = {"joinBrawl"}
                        pcall(function()
                            brawlEvent:FireServer(unpack(args))
                        end)
                    end
                    task.wait(math.random(0.95, 1.05))
                end
            end)
        end
        if savedStates.SizeEnabled then
            sizeEnabled = true
            sizeToggle.Text = "‡πÄ‡∏õ‡∏¥‡∏î"
            if changeSpeedSizeRemote then
                local size = tonumber(savedStates.SizeValue) or 2
                local args = {"changeSize", size}
                pcall(function()
                    changeSpeedSizeRemote:InvokeServer(unpack(args))
                end)
            end
        end
        if not PlayerGui:FindFirstChild("MainGUI") or not PlayerGui:FindFirstChild("ToggleGui") then
            createGui()
        end
        print("‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà: ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞")
    end)

    createGui()
end)

if not success then
    warn("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå: " .. err)
end
